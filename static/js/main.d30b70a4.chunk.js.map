{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","completed","title","TodoList","todos","map","getUser","userId","usersFromServer","find","App","useState","stateTodos","setStateTodos","titleInput","setTitleInput","userSelect","setUserSelect","showErrorInput","setShowErrorInput","showErrorSelect","setShowErrorSelect","action","method","onSubmit","e","preventDefault","input","target","select","inputValue","value","selectValue","Math","random","htmlFor","type","placeholder","onChange","hidden","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d30b70a4.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { User } from '../../types/User';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => (\n  <>\n    <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n      {user.name}\n    </a>\n  </>\n);\n","import { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo,\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => (\n  <>\n    <article className={`TodoInfo ${todo.completed && 'TodoInfo--completed'}`}>\n      <h2 className=\"TodoInfo__title\">{todo.title}</h2>\n\n      {todo.user && <UserInfo user={todo.user} />}\n    </article>\n  </>\n);\n","import { Todo } from '../../types/Todo';\n\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[],\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <>\n    <section className=\"TodoList\">\n      {todos.map((todo) => (\n        <TodoInfo todo={todo} key={todo.id} />\n      ))}\n    </section>\n  </>\n);\n","import React, { useState } from 'react';\nimport './App.scss';\n\nimport todosFromServer from './api/todos';\nimport usersFromServer from './api/users';\n\nimport { User } from './types/User';\nimport { Todo } from './types/Todo';\n\nimport { TodoList } from './components/TodoList';\n\nfunction getUser(userId: number): User | null {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  return foundUser || null;\n}\n\nconst todos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUser(todo.userId),\n}));\n\nexport const App: React.FC = () => {\n  const [stateTodos, setStateTodos] = useState(todos);\n  const [titleInput, setTitleInput] = useState('');\n  const [userSelect, setUserSelect] = useState('Choose');\n  const [showErrorInput, setShowErrorInput] = useState(true);\n  const [showErrorSelect, setShowErrorSelect] = useState(true);\n  const handlerSubmit = (e: React.ChangeEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    const input = e.target[0] as HTMLInputElement;\n    const select = e.target[1] as HTMLSelectElement;\n\n    const inputValue = input.value;\n    const selectValue = +select.value;\n\n    if (!inputValue || !selectValue) {\n      setShowErrorInput(!!inputValue);\n      setShowErrorSelect(!!selectValue);\n\n      return;\n    }\n\n    setStateTodos([...stateTodos, {\n      id: Math.random(),\n      title: inputValue,\n      completed: false,\n      userId: selectValue,\n      user: getUser(selectValue),\n    }]);\n\n    setTitleInput('');\n    setUserSelect('Choose');\n  };\n\n  const handlerInput = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setShowErrorInput(true);\n    setTitleInput(e.target.value);\n  };\n\n  const handlerSelect = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    setShowErrorSelect(true);\n    setUserSelect(e.target.value);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form action=\"/api/users\" method=\"POST\" onSubmit={handlerSubmit}>\n        <div className=\"field\">\n          <label htmlFor=\"titleInput\">Title: </label>\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            id=\"titleInput\"\n            placeholder=\"Enter a title\"\n            name=\"titleInput\"\n            value={titleInput}\n            onChange={handlerInput}\n          />\n          <span\n            className=\"error\"\n            hidden={showErrorInput}\n          >\n            Please enter a title\n          </span>\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"userSelect\">User: </label>\n          <select\n            data-cy=\"userSelect\"\n            id=\"userSelect\"\n            name=\"userSelect\"\n            value={userSelect}\n            onChange={handlerSelect}\n          >\n            <option value=\"Choose\" disabled>Choose a user</option>\n            {usersFromServer.map(user => (\n              <option key={user.id} value={user.id}>{user.name}</option>\n            ))}\n          </select>\n\n          <span\n            className=\"error\"\n            hidden={showErrorSelect}\n          >\n            Please choose a user\n          </span>\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={stateTodos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}